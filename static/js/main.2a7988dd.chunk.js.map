{"version":3,"sources":["assests/images/loader.gif","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Navbar/Navbar.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Messages/Message.jsx","components/common/FormsControls/FormsControls.js","utils/validators/index.js","components/Dialogs/Dialogs.jsx","redux/dialogs-reducer.js","hoc/WithAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx","api/api.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/users/Users.jsx","components/common/Preloader.js","redux/users-selector.js","components/users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","redux/profile-reducer.js","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","App.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js","components/users/users.module.css","assests/images/avatar.png","components/common/Paginator/Paginator.module.css","components/common/FormsControls/FormsControls.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","Navbar","className","s","nav","item","to","activeClassName","active","DialogItem","props","dialog","id","name","Message","message","Textarea","input","meta","hasError","error","touched","StyleSheet","formControl","styles","Input","required","value","maxLengthCreator","maxLength","length","maxLength100","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","placeholder","Dialogs","state","messagePage","dialogsElements","dialogs","map","messageElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","initialState","dialogsReducer","action","type","body","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","dispatch","sendMessageCreator","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","console","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","usersReducer","u","followed","count","filter","Paginator","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","onPageChanged","Users","src","photos","small","userPhoto","disabled","some","unfollow","follow","Preloader","loader","getUser","createSelector","usersPage","getPagesize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","getUsers","setCurrentPage","a","resultCode","items","totalCount","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","ProfileInfo","profile","descriptionBlock","large","Post","likesCount","maxLength10","AddNewPostFormRedux","MyPosts","memo","postsElements","posts","reverse","createRef","postBlock","addPost","newPostText","profileReducer","newPost","MyPostsContainer","profilePage","addPostActionCreator","Profile","content","ProfileContainer","authorizedUserId","history","getUserProfile","Header","header","loginBlock","login","logout","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","stopSubmit","_error","formData","initialized","appReducer","App","initializeApp","path","render","DialogsContainer","withRouter","app","promise","Promise","all","initialStore","sidebarReducer","reducers","combineReducers","sidebar","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2a7988dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.3f259006.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2SaCN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3wwZd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__Xid4N\",\"item\":\"Navbar_item__3f3Z1\",\"active\":\"Navbar_active__2ZWyC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__nNIfE\",\"dialogsItems\":\"Dialogs_dialogsItems__2UBCE\",\"active\":\"Dialogs_active__3f90s\",\"messages\":\"Dialogs_messages__td6On\",\"message\":\"Dialogs_message__qzZTu\"};","import React from \"react\";\r\nimport s from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/profile\" activeClassName={s.active}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={s.active}>\r\n          Messages\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/users\" activeClassName={s.active}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a>News</a>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a>Music</a>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a>Settings</a>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport s from \"../../Dialogs/Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.dialog}>{props.message}</div>;\r\n};\r\n\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n  const hasError = meta.error && meta.touched;\r\n  return (\r\n    <div\r\n      className={StyleSheet.formControl + \" \" + (hasError ? styles.error : \" \")}\r\n    >\r\n      <div>\r\n        <textarea {...input} {...props} />\r\n      </div>\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n      <div\r\n        className={StyleSheet.formControl + \" \" + (hasError ? styles.error : \" \")}\r\n      >\r\n        <div>\r\n          <input {...input} {...props} />\r\n        </div>\r\n        {hasError && <span>{meta.error}</span>}\r\n      </div>\r\n    );\r\n  };","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return ` Max symbols is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Messages/Message\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"./../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.messagePage;\r\n\r\n  let dialogsElements = state.dialogs.map((dialog) => (\r\n    <DialogItem name={dialog.name} id={dialog.id} />\r\n  ));\r\n\r\n  let messageElements = state.messages.map((m) => (\r\n    <Message message={m.message} />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>\r\n          {messageElements}\r\n          <div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          validate={[required, maxLength100]}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter message\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\r\n  AddMessageForm\r\n);\r\nexport default Dialogs;\r\n","const SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: 1, name: \"Marianna\" },\r\n    { id: 2, name: \"Dima\" },\r\n    { id: 3, name: \"Sergey\" },\r\n    { id: 4, name: \"Anton\" },\r\n    { id: 5, name: \"Max\" },\r\n    { id: 6, name: \"Pushok\" },\r\n  ],\r\n  messages: [\r\n    { id: 1, message: \"sup, catbro?\" },\r\n    { id: 2, message: \"sup, catbro?\" },\r\n    { id: 3, message: \"Yo\" },\r\n    { id: 4, message: \"Anton\" },\r\n    { id: 5, message: \"Max\" },\r\n    { id: 6, message: \"Pushok\" },\r\n  ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      let body = action.newMessageBody;\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, { id: 7, message: body }],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({\r\n  type: SEND_MESSAGE,\r\n  newMessageBody,\r\n});\r\n\r\nexport default dialogsReducer;\r\n","import React from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n \r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n  });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n \r\n  \r\n  let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"./../../hoc/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return { messagePage: state.messagePage };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n  headers: {\r\n    \"API-KEY\": \"5a27546d-25a4-4655-a5b8-e3af55cbfda8\",\r\n  },\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage, pageSize) {\r\n    return instance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`);\r\n  },\r\n  unfollow(userId) {\r\n    return instance.delete(`follow/${userId}`);\r\n  },\r\n  getProfile(userId) {\r\n    console.warn(\"Obsolete method. Use profileAPI\");\r\n    return profileAPI.getProfile(userId);\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/` + userId);\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/` + userId);\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, { status });\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(`auth/login`, { email, password, rememberMe });\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/login`);\r\n  },\r\n};\r\n","import { usersAPI } from \"./../api/api\";\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 19,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: true };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: false };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n\r\n    case SET_USERS: {\r\n      return { ...state, users: action.users };\r\n    }\r\n    case SET_CURRENT_PAGE: {\r\n      return { ...state, currentPage: action.currentPage };\r\n    }\r\n    case SET_TOTAL_USERS_COUNT: {\r\n      return { ...state, totalUsersCount: action.count };\r\n    }\r\n    case TOGGLE_IS_FETCHING: {\r\n      return { ...state, isFetching: action.isFetching };\r\n    }\r\n\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : [state.followingInProgress.filter((id) => id !== action.userId)],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({\r\n  type: FOLLOW,\r\n  userId,\r\n});\r\n\r\nexport const unfollowSuccess = (userId) => ({\r\n  type: UNFOLLOW,\r\n  userId,\r\n});\r\n\r\nexport const setUsers = (users) => ({\r\n  type: SET_USERS,\r\n  users,\r\n});\r\n\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  count: totalUsersCount,\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId,\r\n});\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let data = await usersAPI.getUsers(currentPage, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n  };\r\n};\r\n\r\nexport const follow = (userId) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await usersAPI.follow(userId);\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(followSuccess(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n  };\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await usersAPI.unfollow(userId);\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(unfollowSuccess(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n  };\r\n};\r\n\r\nexport default usersReducer;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = (props, portionSize = 10) => {\r\n  //debugger\r\n  let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n  return (\r\n    <div className={styles.paginator}>\r\n      {portionNumber > 1 && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          PREV\r\n        </button>\r\n      )}\r\n\r\n      {pages\r\n        .filter(\r\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\r\n        )\r\n        .map((p) => {\r\n          return (\r\n            <span\r\n              className={cn(\r\n                {\r\n                  [styles.selectedPage]: props.currentPage === p,\r\n                },\r\n                styles.pageNumber\r\n              )}\r\n              key={p}\r\n              onClick={() => {\r\n                props.onPageChanged(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          NEXT\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assests/images/avatar.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\nlet Users = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <Paginator\r\n        currentPage={props.currentPage}\r\n        onPageChanged={props.onPageChanged}\r\n        totalUsersCount={props.totalUsersCount}\r\n        pageSize={props.pageSize}\r\n      />\r\n      {props.users.map((u) => (\r\n        <div key={u.id}>\r\n          <span>\r\n            <div>\r\n              <NavLink to={\"/profile/\" + u.id}>\r\n                <img\r\n                  src={u.photos.small != null ? u.photos.small : userPhoto}\r\n                  className={styles.userPhoto}\r\n                />\r\n              </NavLink>\r\n            </div>\r\n            <div>\r\n              {u.followed ? (\r\n                <button\r\n                  disabled={props.followingInProgress.some((id) => id === u.id)}\r\n                  onClick={() => {\r\n                    props.unfollow(u.id);\r\n                  }}\r\n                >\r\n                  Unfollow\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  disabled={props.followingInProgress.some((id) => id === u.id)}\r\n                  onClick={() => {\r\n                    props.follow(u.id);\r\n                  }}\r\n                >\r\n                  Follow\r\n                </button>\r\n              )}\r\n            </div>\r\n          </span>\r\n          <span>\r\n            <span>\r\n              <div>{u.name}</div>\r\n              <div>{u.status}</div>\r\n            </span>\r\n            <span>\r\n              <div>{\"u.location.country\"}</div>\r\n              <div>{\"u.location.city\"}</div>\r\n            </span>\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react'\r\nimport loader from \"../../assests/images/loader.gif\";\r\n\r\nlet Preloader = (props) => {\r\n   return <img src={loader} />\r\n}\r\n\r\nexport default Preloader;","import { createSelector } from \"reselect\";\r\n\r\nconst getUserSelector = (state) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getUser = createSelector(getUserSelector, (users) => {\r\n  return users.filter((u) => true);\r\n});\r\nexport const getPagesize = (state) => {\r\n  return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport UsersTest from './UsersPagTes';\r\nimport {\r\n  follow,\r\n  unfollow,\r\n  setCurrentPage,\r\n  toggleFollowingProgress,\r\n  getUsers,\r\n} from \"./../../redux/users-reducer\";\r\nimport Users from \"./Users.jsx\";\r\nimport Preloader from \"./../common/Preloader\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n\r\n  getFollowingInProgress,\r\n  getPagesize,\r\n  getUser,\r\n  getTotalUsersCount,\r\n  getCurrentPage,\r\n  getIsFetching,\r\n} from \"./../../redux/users-selector\";\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.getUsers(pageNumber, this.props.pageSize);\r\n    this.props.setCurrentPage(pageNumber);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n\r\n        <Users\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          onPageChanged={this.onPageChanged}\r\n          users={this.props.users}\r\n          follow={this.props.follow}\r\n          unfollow={this.props.unfollow}\r\n          followingInProgress={this.props.followingInProgress}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUser(state),\r\n    pageSize: getPagesize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    getUsers,\r\n  })\r\n)(UsersContainer);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"No Status\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={props.profile.photos.large} />\r\n        <ProfileStatusWithHooks\r\n          status={props.status}\r\n          updateStatus={props.updateStatus}\r\n        />\r\n        Description\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/index.js\";\r\nimport { Textarea } from \"./../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name=\"newPostText\"\r\n          component={Textarea}\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(\r\n  AddNewPostForm\r\n);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = [...props.posts]\r\n    .reverse()\r\n    .map((p) => <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postBlock}>\r\n      <h3> My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { usersAPI, profileAPI } from \"./../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, message: \"sup, catbro?\", likesCount: 12 },\r\n    { id: 2, message: \"First post , sup?\", likesCount: 35 },\r\n  ],\r\n  profile: null,\r\n  status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: 3,\r\n        message: action.newPostText,\r\n        likesCount: 0,\r\n      };\r\n\r\n      return { ...state, posts: [...state.posts, newPost], newPostText: \"\" };\r\n    }\r\n    case SET_USER_PROFILE: {\r\n      return { ...state, profile: action.profile };\r\n    }\r\n    case SET_STATUS: {\r\n      return { ...state, status: action.status };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({\r\n  type: ADD_POST,\r\n  newPostText,\r\n});\r\n\r\nexport const setStatus = (status) => ({\r\n  type: SET_STATUS,\r\n  status,\r\n});\r\nexport const setUserProfile = (profile) => ({\r\n  type: SET_USER_PROFILE,\r\n  profile,\r\n});\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  let response = await usersAPI.getProfile(userId);\r\n  dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getStatus(userId);\r\n  dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  let response = await profileAPI.updateStatus(status);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n","import React from \"react\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {\r\n  addPostActionCreator,\r\n} from \"../../../redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"./../../redux/profile-reducer\";\r\nimport { withAuthRedirect } from \"./../../hoc/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSJubvac5LtNOwJtYNtNx6m67AKuexoQ3KxfZJxjtdkVQPaaN0c&usqp=CAU\" />\r\n\r\n      <div className={s.loginBlock}>\r\n        {props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n       : <NavLink to={\"/login\"}>Login</NavLink>}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return { ...state, ...action.payload };\r\n  }\r\n  return state;\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  payload: { userId, email, login, isAuth },\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  let response = await authAPI.me();\r\n  if (response.data.resultCode === 0) {\r\n    let { id, email, login } = response.data.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  let response = await authAPI.login(email, password, rememberMe);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData());\r\n  } else {\r\n    let message =\r\n      response.data.messages.length > 0\r\n        ? response.data.messages[0]\r\n        : \"Some Error\";\r\n    dispatch(stopSubmit(\"login\", { _error: message }));\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  let response = await authAPI.logout();\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n};\r\nexport default authReducer;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"./../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\nexport default connect(mapStateToProps, { logout })(\r\n  HeaderContainer\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required } from \"../../utils/validators\";\r\nimport { Input } from \"../common/FormsControls/FormsControls\";\r\nimport { login } from \"./../../redux/auth-reducer\";\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe);\r\n  };\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={\"/profile\"} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder={\"Email\"}\r\n          name={\"email\"}\r\n          component={Input}\r\n          validate={required}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          placeholder={\"Password\"}\r\n          name={\"password\"}\r\n          type={\"password\"}\r\n          component={Input}\r\n          validate={required}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"} />\r\n        Remember Me\r\n      </div>\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: \"login\",\r\n})(LoginForm);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITILIAZED_SUCCESSED = \"INITILIAZED_SUCCESSED\";\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITILIAZED_SUCCESSED:\r\n      return { ...state, initialized: true };\r\n  }\r\n  return state;\r\n};\r\n\r\nexport const initializedSuccess = () => ({\r\n  type: INITILIAZED_SUCCESSED,\r\n});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(initializedSuccess());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport { connect } from \"react-redux\";\r\nimport { initializeApp } from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader\";\r\nimport { compose } from \"redux\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n  render() {\r\n  \r\n    if (!this.props.initialized) {\r\n      return <Preloader />;\r\n    }\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className=\"app-wrapper-content\">\r\n          <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\r\n          <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\r\n          <Route path=\"/users\" render={() => <UsersContainer />} />\r\n          <Route path=\"/login\" render={() => <Login />} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized,\r\n});\r\n\r\nexport default compose (withRouter,connect(mapStateToProps, { initializeApp }))(App);\r\n","let initialStore = {}\r\n\r\nconst sidebarReducer = (state = initialStore, action) => {\r\n  return state;\r\n};\r\n\r\nexport default sidebarReducer;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  messagePage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport store from \"./redux/redux-store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__20SoN\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.7c8e5f50.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1YmcE\",\"pageNumber\":\"Paginator_pageNumber__2ev0Y\",\"selectedPage\":\"Paginator_selectedPage__3hymG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1FO3Q\",\"error\":\"FormsControls_error__1HE-7\",\"formSummaryError\":\"FormsControls_formSummaryError__1EQT8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__N39Vs\",\"postBlock\":\"MyPosts_postBlock__R7W5v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1x3NQ\",\"loginBlock\":\"Header_loginBlock__1LGiQ\"};"],"sourceRoot":""}